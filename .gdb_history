p postas
n
p costoFijo
p puestos
p postas
c
p k
condition 1 k == 0
c
p k
p postas
n
n
br 35
c
n
n
 p x
p ultimaPosta 
p puestos[x]
n
p costoFi
p costoFinal 
br 44
c
p costoFinal 
del 1
del 2
n
file a.out 
br 34
r < ej4-ejemplos 
p postas
c
p postas
c
p postas
c
c
file a.out 
br reconstruirSol(int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > > const&, std::vector<int, std::allocator<int> >) 
r
p postas
file a.out 
br reconstruirSol(int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > > const&, std::vector<int, std::allocator<int> >) 
r
p postas
n
p postas
n
p puestos
p i
n
p i
n
n
n
n
p poniendo
p sinPoner
p mejores
p mejores[0]
p mejores[0][k]
file a.out 
br 72
r
n
p poniendo
p sinPoner 
n
n
p dist
file a.out 
br 72
r
n
p poniendo
p sinPoner 
p poniendo <= sinPoner 
n
n
n
p k
p dist
file a.out 
br 72
r
n
p poniendo 
p sinPoner 
n
p sinPoner > poniendo 
n
p k
p dist
p postas
n
p poniendo
p sinPoner 
file a.out 
br 72
r
n
p postas
n
file a.out 
br 72
r
n
file a.out 
br ponerPostas(std::vector<int, std::allocator<int> > const&, int, int, int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > >&, std::vector<int, std::allocator<int> >&) 
r
n
p k
n
n
p i
p k
p dist
p mejores[2]
p mejores[1]
p mejores[0]
n
p mejores
n
p i
p k
p dist
p mejores[i][k][dist]
n
file a.
file a.out 
br ponerPostas(std::vector<int, std::allocator<int> > const&, int, int, int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > >&, std::vector<int, std::allocator<int> >&) 
r < ej4-ejemplos 
n
del 1
br reconstruirSol(int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > > const&, std::vector<int, std::allocator<int> >) 
c
p postas
n
p postas
n
p mejores[i][k][dist]
p mejores[i+1]
p mejores[i+1][k]
p mejores[i+2][k]
p mejores[i+3][k]
file a.out 
r
p ult
n
file a.out 
br mejorCosto(std::vector<int, std::allocator<int> > const&, int, int, int) 
r
n
p k
file a.out 
br mejorCosto(std::vector<int, std::allocator<int> > const&, int, int, int) 
r
n
p ultimoCosto(puestos, ult, 2e7)
br 9
n
p b
p a
n
n
p puestos[i]
p puestos[i] -a
p puestos[i] -b
n
p puestos 
p i
file a.out 
r
file a.out 
br ultimoCosto(std::vector<int, std::allocator<int> > const&, int, int) 
r
n
p b
p a
file a.out 
br mejorCosto(std::vector<int, std::allocator<int> > const&, int, int, int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > >&) 
r
n
br ultimoCosto(std::vector<int, std::allocator<int> > const&, int, int) 
n
file a.out 
r
r
br mejorCosto(std::vector<int, std::allocator<int> > const&, int, int, int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > >&) 
br ultimoCosto(std::vector<int, std::allocator<int> > const&, int, int) 
r
n
del 2
n
br 8
n
del 3
n
p mejores[i][k][ult]
n
kill
r
c
br 8
n
n
n
n
c
n
p mejores[i][k][ult]
n
c
n
del 4
c
del 1
br 70
c
p mejores
p mejores[n-1]
p mejores[n-1][0]
p mejores[n-1][1]
p mejores[n-2][1]
p mejores[2][1]
p mejores[2][2]
file a.out 
br 9
condition 9 a == 4 && b > 0
condition 1 a == 4 && b > 0
r
n
file a.
file a.out 
r < ej4-ejemplos 
p i
p k
file a.
file a.out 
r
r
file a.out 
r
p i
p k
p ult
kill
r
kill
br reconstruirSol(std::vector<int, std::allocator<int> > const&, int, std::vector<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >, std::allocator<std::vector<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > > > > const&) 
r
n
p puestos[5]
n
